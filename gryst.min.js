"use strict";var gryst=gryst||{};gryst.agg={max:function(a,b){var c=a;return b&&(c=[],a.forEach(function(d,e){c[e]=a[e][b]})),Math.max.apply(this,c)},min:function(a,b){var c=a;return b&&(c=[],a.forEach(function(d,e){c[e]=a[e][b]})),Math.min.apply(this,c)},avg:function(a,b){var c=0,d=0;return a.forEach(function(a){c++,d+=null===a[b]?0:a[b]}),d/c}},function(){var a=function(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent("CustomEvent");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c};a.prototype=window.Event.prototype,window.CustomEvent=a}(),gryst.common={getParamNames:function(a){var b=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,c=/([^\s,]+)/g,d=a.toString().replace(b,""),e=d.slice(d.indexOf("(")+1,d.indexOf(")")).match(c);return null===e&&(e=[]),e},hasValue:function(a){return"undefined"!=typeof a&&null!==a},isEmpty:function(a){return"undefined"==typeof a||null===a},deepEqual:function(a,b){function c(a){var b,c=0;for(b in a)a.hasOwnProperty(b)&&c++;return c}function d(a,b){var e,f;if(typeof a!=typeof b)return!1;if("function"==typeof a)return a.toString()===b.toString();if(a instanceof Object){if(c(a)!==c(b))return!1;f=!0;for(e in a)if(f=d(a[e],b[e]),!f)return!1;return!0}return a===b}return d(a,b)},getFieldRefs:function(a,b){var c=[],d=Array.isArray(a)?a:a.split(",");return d.forEach(function(a){"$"!=a[0]&&c.push(new gryst.FieldRef(a,b))}),c},getArguments:function(a,b){var c=[];return a.forEach(function(a){c.push(a.getArgForMapping(b))}),c},addToMap:function(a,b,c){Array.isArray(b)&&b.forEach(function(b){gryst.common.addToMap(a,b,c)}),a.hasOwnProperty(b)?(Array.isArray(a[b])===!1&&(a[b]=[a[b]]),a[b].push(c)):a[b]=c},cloneObj:function(a){var b={};if(this.isEmpty(a))return b;var c=Object.getOwnPropertyNames(a);return c.forEach(function(c){b[c]=a[c]}),b},getType:function(a){if(null===a)return null;var b=typeof a;if("number"===b||"string"===b||"boolean"===b||"function"===b)return b;if(a instanceof Date)return"date";if(Array.isArray(a))return"array";if("object"===b)return b;throw"Could not determine type"},l:"abcdefghijklmnopqrstuvwxyz",createTableID:function(a,b){b=b||"";for(var c,d=0;d<gryst.common.l.length;d++)if(c=b+gryst.common.l[d],!(c in a))return c;return gryst.common.createTableID(a,b+"a")}},gryst.common.stringify=JSON.stringify||function(a){var b,c,d,e=[];switch(b=gryst.common.getType(a)){case null:e.push("null");break;case"number":case"boolean":e.push(a);break;case"string":e.push('"'+a+'"');break;case"date":e.push("Date("+a.getTime()+")");break;case"array":for(e.push("["),c=0;c<a.length;c++)c>0&&e.push(","),e.push(gryst.common.stringify(a[c]));e.push("]");break;case"object":for(d=Object.getOwnPropertyNames(a),e.push("{"),c=0;c<d.length;c++)c>0&&e.push(","),e.push('"'+d[c]+'":'),e.push(gryst.common.stringify(a[d[c]]));e.push("}");break;default:throw"Could not determine type: "+a}return e.join("")},function(a){gryst.Distinct=function(a,b,c,d){this.func=a,this.tables=b,this.getJoinMap=c,this.setJoinMap=d},gryst.Distinct.$inject=["$tables","$getJoinMap","$setJoinMap"],gryst.Distinct.prototype={run:function(){var b=this.getJoinMap();if(0===b.length)return b;var c,d,e,f=this,g=[],h=Object.getOwnPropertyNames(b[0]);return this.func?(e=[],b.forEach(function(a){for(c=!1,1===h.length?d=f.tables[h[0]][a[h[0]]]:(d={},h.forEach(function(b){d[b]=f.tables[b][a[b]]})),i=0;i<e.length;i++)if(f.func(e[i],d)){c=!0;break}0==c&&(e.push(d),g.push(a))})):(e={},b.forEach(function(b){d={},h.forEach(function(a){d[a]=f.tables[a][b[a]]}),d=a.stringify(d),e.hasOwnProperty(d)===!1&&(e[d]=null,g.push(b))})),this.setJoinMap(g),g}}}(gryst.common),function(){gryst.FieldRef=function(a,b){var c,d;this.id=null,this.field=null,this.index=null,this.table=null;var e=a.replace(/ /g,"");if(-1!=e.indexOf("."))return d=e.split("."),this.id=d[0],this.field=d[1],this.table=b[this.id],this.toString=function(){return this.field},this;if(-1!=e.indexOf("["))return d=e.split("["),this.id=d[0],this.index=parseInt(e.match(/\d+/)),this.table=b[this.id],this.toString=function(){return this.id+"_"+this.index},this;if(void 0!=b[e])return this.id=e,this.table=b[this.id],this.toString=function(){return this.id},this;var f=Object.getOwnPropertyNames(b);for(c=0;c<f.length;c++)if(b[f[c]].length>0&&void 0!=b[f[c]][0][e])return this.id=f[c],this.field=e,this.table=b[f[c]],this.toString=function(){return this.field},this;throw"Could not resolve field reference: "+a},gryst.FieldRef.prototype={getRow:function(a){return this.table[a]},getArg:function(a){var b=this.getRow(a);return this.getArgForRow(b)},getArgForMapping:function(a){var b=this.getRow([a[this.id]]);return this.getArgForRow(b)},getArgForRow:function(a){return null!==this.field?a[this.field]:null!==this.index?a[this.index]:a}}}(),function(a){gryst.from=function(a,b){return(new gryst.Query).from(a,b)},gryst.From=function(a,b,c,d){this.tableID=a,this.tables=b,this.getJoinMap=c,this.setJoinMap=d},gryst.From.$inject=["$tables","$getJoinMap","$setJoinMap"],gryst.From.prototype={run:function(){var c,d,b=this,e=this.getJoinMap(),f=this.tables[this.tableID];return 0!=e.length?(d=[],e.forEach(function(e){f.forEach(function(f,g){c=a.cloneObj(e),c[b.tableID]=g,d.push(c)})}),this.setJoinMap(d),d):(f.forEach(function(a,d){c={},c[b.tableID]=d,e.push(c)}),e)}}}(gryst.common),function(a){gryst.Group=function(b,c,d,e,f,g){this.tables=e,this.getJoinMap=f,this.setJoinMap=g,this.tableID=d,"function"==typeof b?(this.groupFunc=b,this.groupFuncParams=a.getParamNames(b)):this.groupFuncParams=b,"function"==typeof c?(this.keyFunc=c,this.keyFuncParams=a.getParamNames(c)):this.keyFuncParams=c},gryst.Group.$inject=["$tables","$getJoinMap","$setJoinMap"],gryst.Group.prototype={run:function(){var c,d,e,f,g,b=this,h=this.getJoinMap(),i=a.getFieldRefs(this.keyFuncParams,this.tables),j=a.getFieldRefs(this.groupFuncParams,this.tables),k=new gryst.Grouping;return this.tables[this.tableID]=[],0==h.length?this.tables[this.tableID]:(this.keyFunc?h.forEach(function(c){d=a.getArguments(i,c),f=b.keyFunc.apply(b,d),k.addKey(f,c)}):h.forEach(function(a){f={},i.forEach(function(b){c=b.getArgForMapping(a),f[b.toString()]=c}),k.addKey(f,a)}),this.tables[this.tableID]=k.getResult(j,this.groupFunc),g=[],this.tables[this.tableID].forEach(function(a,c){e={},e[b.tableID]=c,g.push(e)}),this.setJoinMap(g),this.tables[this.tableID])}}}(gryst.common),function(a){gryst.Grouping=function(){this.keys=[],this.coerced=[],this.map={},this.type=null};var b={coerceKey:function(b,c){switch(c){case null:case"number":case"string":case"boolean":return b.toString();case"date":return b.getTime().toString();case"object":case"array":return a.stringify(b);case"function":throw"Grouping by functions is not supported";default:throw"Could not determine key type"}},getArgs:function(b,c){var d,e=[];return c.forEach(function(c){d=a.getArguments(b,c),d=1==d.length?d[0]:d,e.push(d)}),e}};gryst.Grouping.prototype={addKey:function(c,d){null===this.type&&(this.type=a.getType(c));var e=b.coerceKey(c,this.type);return this.map.hasOwnProperty(e)||(this.map[e]=[],this.keys.push(c),this.coerced.push(e)),this.map[e].push(d),e},getResult:function(c,d){var e,f,g,h,i,j,k=[];if(d)for(i=0;i<this.keys.length;i++)j=this.coerced[i],e=this.map[j],f=b.getArgs(c,e),h=1==c.length?d.call(gryst.agg,f):d.apply(gryst.agg,f),k.push({key:this.keys[i],values:h});else for(i=0;i<this.keys.length;i++)j=this.coerced[i],e=this.map[j],f=b.getArgs(c,e),h=[],f.forEach(function(b){g={},c.forEach(function(c,d){void 0!=c.field?g[c.field]=b[d]:g=a.cloneObj(b)}),h.push(g)}),k.push({key:this.keys[i],values:h});return k}}}(gryst.common),function(){gryst.Injector=function(a){this.dep={$tables:a.tables,$getMap:function(b,c){return a.getMap(b,c)},$getJoinMap:function(){return a.joinMap},$setJoinMap:function(b){a.joinMap=b},$agg:gryst.agg,$injector:this}},gryst.Injector.prototype={inject:function(a,b){b=b||[];var c,d=this;return a.$inject?a.$inject.forEach(function(a){if(!d.dep.hasOwnProperty(a))throw"Unrecognized dependency: "+a;b.push(d.dep[a])}):(c=gryst.common.getParamNames(a),c.forEach(function(a){d.dep.hasOwnProperty(a)&&b.push(d.dep[a])})),b}}}(),function(a){gryst.Join=function(b,c,d,e,f,g){if(this.getMap=d,this.tables=e,this.getJoinMap=f,this.setJoinMap=g,a.isEmpty(b)||a.isEmpty(c))throw"Join is missing field references.";this.field1=b,this.field2=c},gryst.Join.$inject=["$getMap","$tables","$getJoinMap","$setJoinMap"];var b={setFieldReferences:function(a){if(a.length>0)if(a[0].hasOwnProperty(this.fieldRef1.id))this.leftField=this.fieldRef1,this.rightField=this.fieldRef2;else{if(!a[0].hasOwnProperty(this.fieldRef2.id))throw"Join failed: unable to resolve field references: "+this.field1+","+this.field2;this.leftField=this.fieldRef2,this.rightField=this.fieldRef1}}};gryst.Join.prototype={run:function(){var c=this.getJoinMap();if(0==c.length)return c;if(this.fieldRef1=new gryst.FieldRef(this.field1,this.tables),this.fieldRef2=new gryst.FieldRef(this.field2,this.tables),0!=c.length){b.setFieldReferences.call(this,c);var e,f,g,d=this,h=[],i=this.getMap(this.rightField);return c.forEach(function(b){f=d.leftField.getArgForMapping(b),i.hasOwnProperty(f)&&(g=i[f],Array.isArray(g)||(g=[g]),g.forEach(function(c){e=a.cloneObj(b),e[d.rightField.id]=c,h.push(e)}))}),this.setJoinMap(h),h}}}}(gryst.common),function(){gryst.JoinMap=function(a,b){var c=this;this.tables=b,this.map=a,this.run=function(){var a,b,d=[],e=this.map.length>0?Object.getOwnPropertyNames(this.map[0]):null;return e&&(1==e.length?(a=e[0],this.map.forEach(function(e){b=c.tables[a][e[a]],d.push(b)})):this.map.forEach(function(a){b={},e.forEach(function(d){b[d]=c.tables[d][a[d]]}),d.push(b)})),d}},gryst.JoinMap.$inject=["$tables"]}(),function(a){gryst.extend=function(a,c,d){d&&(c.$inject=d),gryst.Query.prototype[a]=function(a){var d=b.createOp.call(this,c,a);return this.runnable.ops.push(d),this}},gryst.Query=function(){var a=this;this.runnable=new gryst.Runnable,this.injector=new gryst.Injector(this.runnable),Object.defineProperty(this,"length",{get:function(){return null===a.runnable.result&&a.runnable.run(),a.runnable.result.length}})};var b={createOp:function(a,b){return b=Array.isArray(b)?b:[b],this.injector.inject(a,b),new a(b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9])}};gryst.Query.prototype={from:function(c,d){d=d||a.createTableID(this.runnable.tables),this.runnable.tables[d]=c;var e=b.createOp.call(this,gryst.From,d);return this.runnable.ops.push(e),this},join:function(a,c,d,e){this.runnable.tables[c]=a;var f=b.createOp.call(this,gryst.Join,[d,e]);return this.runnable.ops.push(f),this},where:function(a){var c=b.createOp.call(this,gryst.Where,a);return this.runnable.ops.push(c),this},orderBy:function(a,c){var d=b.createOp.call(this,gryst.Sort,[a,!1,c]);return this.runnable.ops.push(d),this},thenBy:function(a,c){var d=b.createOp.call(this,gryst.Sort,[a,!1,c]);return this.runnable.addChildSort(d),this},orderByDescending:function(a,c){var d=b.createOp.call(this,gryst.Sort,[a,!0,c]);return this.runnable.ops.push(d),this},thenByDescending:function(a,c){var d=b.createOp.call(this,gryst.Sort,[a,!0,c]);return this.runnable.addChildSort(d),this},group:function(a,c,d){var e=b.createOp.call(this,gryst.Group,[a,c,d]);return this.runnable.ops.push(e),this},select:function(a,c){var d=b.createOp.call(this,gryst.Select,[a,c]);return this.runnable.ops.push(d),this},distinct:function(a){var c=b.createOp.call(this,gryst.Distinct,a);return this.runnable.ops.push(c),this},forEach:function(a){var b=this,c=this.runnable.run();c.forEach(function(c,d){a.call(b,c,d)})},run:function(a){if(void 0==a)return this.runnable.run();var b=this;setTimeout(function(){a(b.runnable.run())},0)},get:function(a){return null===this.runnable.result&&this.runnable.run(),this.runnable.result[a]}}}(gryst.common),function(a){gryst.Runnable=function(){this.tables={},this.joinMap=[],this.ops=[],this.result=null},gryst.Runnable.prototype={addChildSort:function(a){for(var b=this.ops.length-1;b>=0;b--)if(this.ops[b]instanceof gryst.Sort)return this.ops[b].setChild(a),void 0;this.ops.push(a)},getMap:function(b){var d,c=this.tables[b.id];return c.hasOwnProperty("Maps")||(c.Maps={}),c.Maps.hasOwnProperty(b.toString())?c.Maps[b.toString()]:(d={},c.forEach(function(c,e){a.addToMap(d,b.getArgForRow(c),e)}),c.Maps[b.toString()]=d,d)},run:function(){var a=this;return this.joinMap=[],this.result=null,this.ops.forEach(function(b){a.result=b.run()}),this.result===this.joinMap?new gryst.JoinMap(this.joinMap,this.tables).run():this.result}}}(gryst.common),function(a){gryst.Select=function(b,c,d,e,f){if(this.tables=d,this.getJoinMap=e,this.setJoinMap=f,this.tableID=c,"function"==typeof b){if(this.func=b,this.params=a.getParamNames(b),0===this.params.length)throw"Select function has no parameters."}else this.params=b},gryst.Select.$inject=["$tables","$getJoinMap","$setJoinMap"],gryst.Select.prototype={run:function(){var c,d,e,b=this,f=[],g=this.getJoinMap();if(this.tableID=this.tableID||a.createTableID(this.tables),this.tables[this.tableID]=[],0==g.length)return this.tables[this.tableID];var h=a.getFieldRefs(this.params,this.tables);return this.func?g.forEach(function(c){e=a.getArguments(h,c),d=b.func.apply(b,e),b.tables[b.tableID].push(d)}):g.forEach(function(a){c={},1==h.length?c=h[0].getArgForMapping(a):h.forEach(function(b){c[b.toString()]=b.getArgForMapping(a)}),b.tables[b.tableID].push(c)}),this.tables[this.tableID].forEach(function(a,d){c={},c[b.tableID]=d,f.push(c)}),this.setJoinMap(f),this.tables[this.tableID]}}}(gryst.common),gryst.extend("skip",function(a,b,c){this.run=function(){var d=b().slice(a);return c(d),d}},["$getJoinMap","$setJoinMap"]),gryst.extend("take",function(a,b,c){this.run=function(){var d=b().slice(0,a);return c(d),d}},["$getJoinMap","$setJoinMap"]),function(a){gryst.Sort=function(a,b,c,d,e,f){this.tables=d,this.getJoinMap=e,this.setJoinMap=f,this.field=a,this.desc=b,this.childSort=null,this.type=null,this.func=c,this.fieldRef=null,this.sortFunction=null},gryst.Sort.$inject=["$tables","$getJoinMap","$setJoinMap"];var b={getSortType:function(b){var c,d,e;if(b.table.length>0){for(e=null,c=0;c<b.table.length&&a.isEmpty(e);c++)e=b.getArg(c);if(!a.isEmpty(e))switch(d=a.getType(e)){case"number":case"date":return d;default:return"string"}}},getSortFunction:function(){var a,c=this;return this.fieldRef=new gryst.FieldRef(this.field,this.tables),void 0!=this.func?function(a,b){var d=c.fieldRef.getArgForMapping(a),e=c.fieldRef.getArgForMapping(b),f=c.func(d,e);return 0==f&&null!=c.childSort?c.childSort.sort(a,b):f}:(a=b.getSortType(this.fieldRef),"number"===a||"date"===a?this.desc===!0?function(a,b){var f,d=c.fieldRef.getArgForMapping(a),e=c.fieldRef.getArgForMapping(b);if(null===d){if(null!=e)return 1}else if(null===e)return-1;return f=e-d,0==f&&null!=c.childSort?c.childSort.sort(a,b):f}:function(a,b){var f,d=c.fieldRef.getArgForMapping(a),e=c.fieldRef.getArgForMapping(b);if(null===d){if(null!=e)return-1}else if(null===e)return 1;return f=d-e,0==f&&null!=c.childSort?c.childSort.sort(a,b):f}:this.desc===!0?function(a,b){var d=c.fieldRef.getArgForMapping(a),e=c.fieldRef.getArgForMapping(b);if(null===d){if(null!=e)return 1}else{if(null===e)return-1;if(d>e)return-1;if(e>d)return 1}return null!=c.childSort?c.childSort.sort(a,b):0}:function(a,b){var d=c.fieldRef.getArgForMapping(a),e=c.fieldRef.getArgForMapping(b);if(null===d){if(null!=e)return-1}else{if(null===e)return 1;if(d>e)return 1;if(e>d)return-1}return null!=c.childSort?c.childSort.sort(a,b):0})}};gryst.Sort.prototype={setChild:function(a){null===this.childSort?(a.isRoot=!1,this.childSort=a):this.childSort.setChild(a)},sort:function(a,c){var d;return null===this.sortFunction&&(this.sortFunction=b.getSortFunction.call(this)),d=this.sortFunction(a,c),0==d&&null!=this.childSort?this.childSort.sort(a,c):d},run:function(a){return a||(a=this.getJoinMap()),a.length<2?a:(this.sortFunction=b.getSortFunction.call(this),a.sort(this.sortFunction),a)}}}(gryst.common),function(a){gryst.Where=function(b,c,d,e){if(this.tables=c,this.getJoinMap=d,this.setJoinMap=e,this.func=b,this.params=a.getParamNames(b),0===this.params.length)throw"Where function has no parameters."},gryst.Where.$inject=["$tables","$getJoinMap","$setJoinMap"],gryst.Where.prototype={run:function(){var b,c,f,d=this,e=!1,g=this.getJoinMap();if(0==g.length)return g;var h=a.getFieldRefs(this.params,this.tables);return g.forEach(function(f,i){b=a.getArguments(h,f),c=d.func.apply(d,b),c===!1&&(delete g[i],e=!0)}),e?(f=[],Object.keys(g).forEach(function(a){f.push(g[a])}),this.setJoinMap(f),f):g}}}(gryst.common);